/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';




declare global {
  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}

  namespace StencilComponents {

    interface TeddytApp {

    }

    interface TeddytHeader {
      'projectName': string;
    }
  }


    interface HTMLTeddytAppElement extends StencilComponents.TeddytApp, HTMLStencilElement {}

    var HTMLTeddytAppElement: {
      prototype: HTMLTeddytAppElement;
      new (): HTMLTeddytAppElement;
    };
    

    interface HTMLTeddytHeaderElement extends StencilComponents.TeddytHeader, HTMLStencilElement {}

    var HTMLTeddytHeaderElement: {
      prototype: HTMLTeddytHeaderElement;
      new (): HTMLTeddytHeaderElement;
    };
    

  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {
    'teddyt-app': JSXElements.TeddytAppAttributes;
    'teddyt-header': JSXElements.TeddytHeaderAttributes;
    }
  }

  namespace JSXElements {

    export interface TeddytAppAttributes extends HTMLAttributes {

    }

    export interface TeddytHeaderAttributes extends HTMLAttributes {
      'onNewProject'?: (event: CustomEvent<null>) => void;
      'onProjectNameChanged'?: (event: CustomEvent<string>) => void;
      'onSaveProject'?: (event: CustomEvent<string>) => void;
      'projectName'?: string;
    }
  }

  interface HTMLElementTagNameMap {
    'teddyt-app': HTMLTeddytAppElement
    'teddyt-header': HTMLTeddytHeaderElement
  }

  interface ElementTagNameMap {
    'teddyt-app': HTMLTeddytAppElement;
    'teddyt-header': HTMLTeddytHeaderElement;
  }
}
declare global { namespace JSX { interface StencilJSX {} } }

